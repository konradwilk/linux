/*
 * Copyright (c) 2018 Intel Corporation.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version
 * 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */

#ifndef __CRLMODULE_AR0231AT_CONFIGURATION_H_
#define __CRLMODULE_AR0231AT_CONFIGURATION_H_

#include "crlmodule-sensor-ds.h"

struct crl_pll_configuration ar0231at_pll_configurations[] = {
	{
		.input_clk = 27000000,
		.op_sys_clk = 87750000,
		.bitsperpixel = 12,
		.pixel_rate_csi = 176000000,
		.pixel_rate_pa = 176000000, /* pixel_rate = op_sys_clk*2 *csi_lanes/bitsperpixel */
		.csi_lanes = 4,
		.comp_items = 0,
		.ctrl_data = 0,
		.pll_regs_items = 0,
		.pll_regs = 0,
	},
};

struct crl_sensor_subdev_config ar0231at_sensor_subdevs[] = {
	{
		.subdev_type = CRL_SUBDEV_TYPE_BINNER,
		.name = "ar0231at binner",
	},
	{
		.subdev_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.name = "ar0231at pixel array",
	},
};

struct crl_subdev_rect_rep ar0231at_1920_1088_rects[] = {
	{
		.subdev_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.in_rect.left = 0,
		.in_rect.top = 0,
		.in_rect.width = 1920,
		.in_rect.height = 1088,
		.out_rect.left = 0,
		.out_rect.top = 0,
		.out_rect.width = 1920,
		.out_rect.height = 1088,
	},
	{
		.subdev_type = CRL_SUBDEV_TYPE_BINNER,
		.in_rect.left = 0,
		.in_rect.top = 0,
		.in_rect.width = 1920,
		.in_rect.height = 1088,
		.out_rect.left = 0,
		.out_rect.top = 0,
		.out_rect.width = 1920,
		.out_rect.height = 1088,
	}
};

/*
 * Exposure mode:
 *   0: Linear mode
 *   1: 2-HDR mode
 *   2: 3-HDR mode
 *   3: 4-HDR mode
 */
struct crl_ctrl_data_pair ar0231at_ctrl_data_modes[] = {
	{
		.ctrl_id = CRL_CID_EXPOSURE_MODE,
		.data = 0,
	},
	{
		.ctrl_id = CRL_CID_EXPOSURE_MODE,
		.data = 1,
	},
	{
		.ctrl_id = CRL_CID_EXPOSURE_MODE,
		.data = 2,
	},
	{
		.ctrl_id = CRL_CID_EXPOSURE_MODE,
		.data = 3,
	},
};

static struct crl_register_write_rep ar0231at_1920_1088_linear_mode[] = {
	{ 0x301A, CRL_REG_LEN_16BIT, 0x1058, 0x10 },
	{ 0x0000, CRL_REG_LEN_DELAY, 200, 0x10 },
	{ 0x3092, CRL_REG_LEN_16BIT, 0x0C24, 0x10 },
	{ 0x337A, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3520, CRL_REG_LEN_16BIT, 0x1288, 0x10 },
	{ 0x3522, CRL_REG_LEN_16BIT, 0x880C, 0x10 },
	{ 0x3524, CRL_REG_LEN_16BIT, 0x0C12, 0x10 },
	{ 0x352C, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x354A, CRL_REG_LEN_16BIT, 0x007F, 0x10 },
	{ 0x350C, CRL_REG_LEN_16BIT, 0x055C, 0x10 },
	{ 0x3506, CRL_REG_LEN_16BIT, 0x3333, 0x10 },
	{ 0x3508, CRL_REG_LEN_16BIT, 0x3333, 0x10 },
	{ 0x3100, CRL_REG_LEN_16BIT, 0x4000, 0x10 },
	{ 0x3280, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3282, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3284, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3286, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3288, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328A, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328C, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328E, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3290, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3292, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3294, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3296, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3298, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329A, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329C, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329E, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x301A, CRL_REG_LEN_16BIT, 0x10D8, 0x10 },
	{ 0x0000, CRL_REG_LEN_DELAY, 200, 0x10 },
	{ 0x2512, CRL_REG_LEN_16BIT, 0x8000, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0905, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3350, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2004, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1460, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1578, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x7B24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xEA24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1022, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2410, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x155A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24FF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24FF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24EA, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2324, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x647A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2404, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x052C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x400A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF0A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF0A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1008, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3851, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0004, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0801, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0408, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1180, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2652, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1518, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0906, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1348, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1002, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1016, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1181, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1189, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1056, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0D09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1413, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2B15, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0311, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD909, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1214, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0312, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1409, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0110, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD612, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xDD11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD910, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xDB09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x9B09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0F11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1A12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1014, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x7610, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xE609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0812, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x290B, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0904, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0923, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15C8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13C8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x092C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1588, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1388, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C14, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1112, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBF11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB10, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6611, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFB09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6312, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6014, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xB812, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xA012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2610, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3053, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4215, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1611, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8111, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8910, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5612, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x010D, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0815, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1313, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0215, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC813, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0515, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8813, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0213, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0411, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC909, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0814, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD908, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x091A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0903, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1214, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x10D6, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11DD, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11D9, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1056, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0917, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11DB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0913, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11FB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0905, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x121A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1460, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1250, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1076, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x10E6, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15A8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13A8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1240, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0925, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13AD, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0902, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0907, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1588, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x138D, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0914, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B13, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1C0C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0920, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1262, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1066, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x090A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11FB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x093B, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1263, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1508, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11B8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x12A0, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1200, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1026, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1000, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1300, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1100, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x437A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B05, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0708, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4137, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x502C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2CFE, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15FE, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C2C, 0x10 },
	{ 0x32E6, CRL_REG_LEN_16BIT, 0x00E0, 0x10 },
	{ 0x1008, CRL_REG_LEN_16BIT, 0x036F, 0x10 },
	{ 0x100C, CRL_REG_LEN_16BIT, 0x058F, 0x10 },
	{ 0x100E, CRL_REG_LEN_16BIT, 0x07AF, 0x10 },
	{ 0x1010, CRL_REG_LEN_16BIT, 0x014F, 0x10 },
	{ 0x3230, CRL_REG_LEN_16BIT, 0x0312, 0x10 },
	{ 0x3232, CRL_REG_LEN_16BIT, 0x0532, 0x10 },
	{ 0x3234, CRL_REG_LEN_16BIT, 0x0752, 0x10 },
	{ 0x3236, CRL_REG_LEN_16BIT, 0x00F2, 0x10 },
	{ 0x3566, CRL_REG_LEN_16BIT, 0x3328, 0x10 },
	{ 0x32D0, CRL_REG_LEN_16BIT, 0x3A02, 0x10 },
	{ 0x32D2, CRL_REG_LEN_16BIT, 0x3508, 0x10 },
	{ 0x32D4, CRL_REG_LEN_16BIT, 0x3702, 0x10 },
	{ 0x32D6, CRL_REG_LEN_16BIT, 0x3C04, 0x10 },
	{ 0x32DC, CRL_REG_LEN_16BIT, 0x370A, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x302A, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x302C, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x302E, CRL_REG_LEN_16BIT, 0x0003, 0x10 },
	{ 0x3030, CRL_REG_LEN_16BIT, 0x004E, 0x10 },
	{ 0x3036, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x3038, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x30A2, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x30A6, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x3040, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F2, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3180, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x33E4, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3004, CRL_REG_LEN_16BIT, 0x0004, 0x10 },
	{ 0x3008, CRL_REG_LEN_16BIT, 0x0783, 0x10 },
	{ 0x3002, CRL_REG_LEN_16BIT, 0x003C, 0x10 },
	{ 0x3006, CRL_REG_LEN_16BIT, 0x047B, 0x10 },
	{ 0x3032, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3400, CRL_REG_LEN_16BIT, 0x0010, 0x10 },
	{ 0x3402, CRL_REG_LEN_16BIT, 0x0F10, 0x10 },
	{ 0x3404, CRL_REG_LEN_16BIT, 0x0970, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F1, 0x10 },
	{ 0x0000, CRL_REG_LEN_DELAY, 200, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F0, 0x10 },
	{ 0x300C, CRL_REG_LEN_16BIT, 0x0872, 0x10 },
	{ 0x300A, CRL_REG_LEN_16BIT, 0x054A, 0x10 },
	{ 0x3042, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3012, CRL_REG_LEN_16BIT, 0x0163, 0x10 },
	{ 0x3014, CRL_REG_LEN_16BIT, 0x014F, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x32EA, CRL_REG_LEN_16BIT, 0x3C08, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x31D0, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x31AE, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x31AC, CRL_REG_LEN_16BIT, 0x0C0C, 0x10 },
	/* try sync mode */
	{ 0x340A, CRL_REG_LEN_16BIT, 0x0077, 0x10 },
	{ 0x340C, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x30CE, CRL_REG_LEN_16BIT, 0x0120, 0x10 },
	{ 0x301A, CRL_REG_LEN_16BIT, 0x19DC, 0x10 },
};

static struct crl_register_write_rep ar0231at_1920_1088_2hdr_mode[] = {
	{ 0x301A, CRL_REG_LEN_16BIT, 0x10D8, 0x10 },
	{ 0x0000, CRL_REG_LEN_DELAY, 100, 0x10 },
	{ 0x3092, CRL_REG_LEN_16BIT, 0x0C24, 0x10 },
	{ 0x337A, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3520, CRL_REG_LEN_16BIT, 0x1288, 0x10 },
	{ 0x3522, CRL_REG_LEN_16BIT, 0x880C, 0x10 },
	{ 0x3524, CRL_REG_LEN_16BIT, 0x0C12, 0x10 },
	{ 0x352C, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x354A, CRL_REG_LEN_16BIT, 0x007F, 0x10 },
	{ 0x350C, CRL_REG_LEN_16BIT, 0x055C, 0x10 },
	{ 0x3506, CRL_REG_LEN_16BIT, 0x3333, 0x10 },
	{ 0x3508, CRL_REG_LEN_16BIT, 0x3333, 0x10 },
	{ 0x3100, CRL_REG_LEN_16BIT, 0x4000, 0x10 },
	{ 0x3280, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3282, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3284, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3286, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3288, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328A, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328C, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328E, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3290, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3292, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3294, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3296, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3298, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329A, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329C, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329E, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x301A, CRL_REG_LEN_16BIT, 0x10D8, 0x10 },
	{ 0x0000, CRL_REG_LEN_DELAY, 200, 0x10 },
	{ 0x2512, CRL_REG_LEN_16BIT, 0x8000, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0905, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3350, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2004, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1460, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1578, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x7B24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xEA24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1022, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2410, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x155A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24FF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24FF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24EA, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2324, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x647A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2404, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x052C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x400A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF0A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF0A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1008, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3851, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0004, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0801, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0408, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1180, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2652, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1518, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0906, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1348, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1002, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1016, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1181, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1189, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1056, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0D09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1413, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2B15, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0311, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD909, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1214, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0312, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1409, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0110, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD612, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xDD11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD910, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xDB09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x9B09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0F11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1A12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1014, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x7610, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xE609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0812, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x290B, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0904, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0923, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15C8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13C8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x092C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1588, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1388, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C14, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1112, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBF11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB10, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6611, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFB09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6312, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6014, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xB812, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xA012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2610, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3053, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4215, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1611, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8111, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8910, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5612, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x010D, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0815, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1313, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0215, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC813, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0515, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8813, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0213, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0411, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC909, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0814, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD908, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x091A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0903, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1214, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x10D6, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11DD, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11D9, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1056, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0917, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11DB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0913, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11FB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0905, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x121A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1460, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1250, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1076, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x10E6, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15A8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13A8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1240, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0925, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13AD, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0902, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0907, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1588, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x138D, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0914, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B13, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1C0C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0920, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1262, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1066, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x090A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11FB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x093B, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1263, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1508, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11B8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x12A0, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1200, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1026, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1000, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1300, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1100, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x437A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B05, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0708, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4137, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x502C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2CFE, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15FE, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C2C, 0x10 },
	{ 0x32E6, CRL_REG_LEN_16BIT, 0x00E0, 0x10 },
	{ 0x1008, CRL_REG_LEN_16BIT, 0x036F, 0x10 },
	{ 0x100C, CRL_REG_LEN_16BIT, 0x058F, 0x10 },
	{ 0x100E, CRL_REG_LEN_16BIT, 0x07AF, 0x10 },
	{ 0x1010, CRL_REG_LEN_16BIT, 0x014F, 0x10 },
	{ 0x3230, CRL_REG_LEN_16BIT, 0x0312, 0x10 },
	{ 0x3232, CRL_REG_LEN_16BIT, 0x0532, 0x10 },
	{ 0x3234, CRL_REG_LEN_16BIT, 0x0752, 0x10 },
	{ 0x3236, CRL_REG_LEN_16BIT, 0x00F2, 0x10 },
	{ 0x3566, CRL_REG_LEN_16BIT, 0x3328, 0x10 },
	{ 0x32D0, CRL_REG_LEN_16BIT, 0x3A02, 0x10 },
	{ 0x32D2, CRL_REG_LEN_16BIT, 0x3508, 0x10 },
	{ 0x32D4, CRL_REG_LEN_16BIT, 0x3702, 0x10 },
	{ 0x32D6, CRL_REG_LEN_16BIT, 0x3C04, 0x10 },
	{ 0x32DC, CRL_REG_LEN_16BIT, 0x370A, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x302A, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x302C, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x302E, CRL_REG_LEN_16BIT, 0x0003, 0x10 },
	{ 0x3030, CRL_REG_LEN_16BIT, 0x004E, 0x10 },
	{ 0x3036, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x3038, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x30A2, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x30A6, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x3040, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3040, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0004, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F1, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3180, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x33E4, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3004, CRL_REG_LEN_16BIT, 0x0004, 0x10 },
	{ 0x3008, CRL_REG_LEN_16BIT, 0x0783, 0x10 },
	{ 0x3002, CRL_REG_LEN_16BIT, 0x003C, 0x10 },
	{ 0x3006, CRL_REG_LEN_16BIT, 0x047B, 0x10 },
	{ 0x3032, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3400, CRL_REG_LEN_16BIT, 0x0010, 0x10 },
	{ 0x3402, CRL_REG_LEN_16BIT, 0x0788, 0x10 },
	{ 0x3402, CRL_REG_LEN_16BIT, 0x0F10, 0x10 },
	{ 0x3404, CRL_REG_LEN_16BIT, 0x04B8, 0x10 },
	{ 0x3404, CRL_REG_LEN_16BIT, 0x0970, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0004, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F1, 0x10 },
	{ 0x300C, CRL_REG_LEN_16BIT, 0x0872, 0x10 },
	{ 0x300A, CRL_REG_LEN_16BIT, 0x054A, 0x10 },
	{ 0x3042, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3012, CRL_REG_LEN_16BIT, 0x0163, 0x10 },
	{ 0x3014, CRL_REG_LEN_16BIT, 0x0882, 0x10 },
	{ 0x321E, CRL_REG_LEN_16BIT, 0x0882, 0x10 },
	{ 0x3222, CRL_REG_LEN_16BIT, 0x0882, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x32EA, CRL_REG_LEN_16BIT, 0x3C0E, 0x10 },
	{ 0x32EA, CRL_REG_LEN_16BIT, 0x3C0E, 0x10 },
	{ 0x32EA, CRL_REG_LEN_16BIT, 0x3C0E, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x31D0, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x31AE, CRL_REG_LEN_16BIT, 0x0201, 0x10 },
	{ 0x31AE, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x31AC, CRL_REG_LEN_16BIT, 0x140C, 0x10 },
	{ 0x340A, CRL_REG_LEN_16BIT, 0x0077, 0x10 },
	{ 0x340C, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x30CE, CRL_REG_LEN_16BIT, 0x0120, 0x10 },
	{ 0x301A, CRL_REG_LEN_16BIT, 0x19DC, 0x10 },
};

static struct crl_register_write_rep ar0231at_1920_1088_3hdr_mode[] = {
	{ 0x301A, CRL_REG_LEN_16BIT, 0x10D8, 0x10 },
	{ 0x0000, CRL_REG_LEN_DELAY, 100, 0x10 },
	{ 0x3092, CRL_REG_LEN_16BIT, 0x0C24, 0x10 },
	{ 0x337A, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3520, CRL_REG_LEN_16BIT, 0x1288, 0x10 },
	{ 0x3522, CRL_REG_LEN_16BIT, 0x880C, 0x10 },
	{ 0x3524, CRL_REG_LEN_16BIT, 0x0C12, 0x10 },
	{ 0x352C, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x354A, CRL_REG_LEN_16BIT, 0x007F, 0x10 },
	{ 0x350C, CRL_REG_LEN_16BIT, 0x055C, 0x10 },
	{ 0x3506, CRL_REG_LEN_16BIT, 0x3333, 0x10 },
	{ 0x3508, CRL_REG_LEN_16BIT, 0x3333, 0x10 },
	{ 0x3100, CRL_REG_LEN_16BIT, 0x4000, 0x10 },
	{ 0x3280, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3282, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3284, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3286, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3288, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328A, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328C, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328E, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3290, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3292, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3294, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3296, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3298, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329A, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329C, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329E, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x301A, CRL_REG_LEN_16BIT, 0x10D8, 0x10 },
	{ 0x0000, CRL_REG_LEN_DELAY, 200, 0x10 },
	{ 0x2512, CRL_REG_LEN_16BIT, 0x8000, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0905, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3350, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2004, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1460, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1578, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x7B24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xEA24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1022, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2410, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x155A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24FF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24FF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24EA, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2324, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x647A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2404, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x052C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x400A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF0A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF0A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1008, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3851, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0004, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0801, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0408, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1180, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2652, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1518, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0906, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1348, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1002, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1016, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1181, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1189, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1056, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0D09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1413, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2B15, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0311, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD909, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1214, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0312, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1409, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0110, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD612, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xDD11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD910, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xDB09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x9B09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0F11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1A12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1014, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x7610, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xE609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0812, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x290B, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0904, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0923, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15C8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13C8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x092C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1588, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1388, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C14, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1112, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBF11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB10, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6611, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFB09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6312, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6014, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xB812, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xA012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2610, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3053, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4215, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1611, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8111, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8910, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5612, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x010D, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0815, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1313, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0215, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC813, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0515, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8813, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0213, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0411, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC909, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0814, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD908, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x091A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0903, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1214, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x10D6, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11DD, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11D9, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1056, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0917, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11DB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0913, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11FB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0905, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x121A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1460, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1250, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1076, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x10E6, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15A8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13A8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1240, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0925, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13AD, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0902, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0907, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1588, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x138D, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0914, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B13, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1C0C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0920, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1262, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1066, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x090A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11FB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x093B, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1263, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1508, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11B8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x12A0, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1200, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1026, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1000, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1300, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1100, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x437A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B05, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0708, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4137, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x502C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2CFE, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15FE, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C2C, 0x10 },
	{ 0x32E6, CRL_REG_LEN_16BIT, 0x00E0, 0x10 },
	{ 0x1008, CRL_REG_LEN_16BIT, 0x036F, 0x10 },
	{ 0x100C, CRL_REG_LEN_16BIT, 0x058F, 0x10 },
	{ 0x100E, CRL_REG_LEN_16BIT, 0x07AF, 0x10 },
	{ 0x1010, CRL_REG_LEN_16BIT, 0x014F, 0x10 },
	{ 0x3230, CRL_REG_LEN_16BIT, 0x0312, 0x10 },
	{ 0x3232, CRL_REG_LEN_16BIT, 0x0532, 0x10 },
	{ 0x3234, CRL_REG_LEN_16BIT, 0x0752, 0x10 },
	{ 0x3236, CRL_REG_LEN_16BIT, 0x00F2, 0x10 },
	{ 0x3566, CRL_REG_LEN_16BIT, 0x3328, 0x10 },
	{ 0x32D0, CRL_REG_LEN_16BIT, 0x3A02, 0x10 },
	{ 0x32D2, CRL_REG_LEN_16BIT, 0x3508, 0x10 },
	{ 0x32D4, CRL_REG_LEN_16BIT, 0x3702, 0x10 },
	{ 0x32D6, CRL_REG_LEN_16BIT, 0x3C04, 0x10 },
	{ 0x32DC, CRL_REG_LEN_16BIT, 0x370A, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x302A, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x302C, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x302E, CRL_REG_LEN_16BIT, 0x0003, 0x10 },
	{ 0x3030, CRL_REG_LEN_16BIT, 0x004E, 0x10 },
	{ 0x3036, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x3038, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x30A2, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x30A6, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x3040, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3040, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F2, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F2, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F2, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3180, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x33E4, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3004, CRL_REG_LEN_16BIT, 0x0004, 0x10 },
	{ 0x3008, CRL_REG_LEN_16BIT, 0x0783, 0x10 },
	{ 0x3002, CRL_REG_LEN_16BIT, 0x003C, 0x10 },
	{ 0x3006, CRL_REG_LEN_16BIT, 0x047B, 0x10 },
	{ 0x3032, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3400, CRL_REG_LEN_16BIT, 0x0010, 0x10 },
	{ 0x3402, CRL_REG_LEN_16BIT, 0x0788, 0x10 },
	{ 0x3402, CRL_REG_LEN_16BIT, 0x0F10, 0x10 },
	{ 0x3404, CRL_REG_LEN_16BIT, 0x04B8, 0x10 },
	{ 0x3404, CRL_REG_LEN_16BIT, 0x0970, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F2, 0x10 },
	{ 0x300C, CRL_REG_LEN_16BIT, 0x0872, 0x10 },
	{ 0x300A, CRL_REG_LEN_16BIT, 0x054A, 0x10 },
	{ 0x3042, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3012, CRL_REG_LEN_16BIT, 0x0163, 0x10 },
	{ 0x3014, CRL_REG_LEN_16BIT, 0x0882, 0x10 },
	{ 0x321E, CRL_REG_LEN_16BIT, 0x0882, 0x10 },
	{ 0x3222, CRL_REG_LEN_16BIT, 0x0882, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x32EA, CRL_REG_LEN_16BIT, 0x3C0E, 0x10 },
	{ 0x32EA, CRL_REG_LEN_16BIT, 0x3C0E, 0x10 },
	{ 0x32EA, CRL_REG_LEN_16BIT, 0x3C0E, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x31D0, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x31AE, CRL_REG_LEN_16BIT, 0x0201, 0x10 },
	{ 0x31AE, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x31AC, CRL_REG_LEN_16BIT, 0x140C, 0x10 },
	{ 0x340A, CRL_REG_LEN_16BIT, 0x0077, 0x10 },
	{ 0x340C, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x30CE, CRL_REG_LEN_16BIT, 0x0120, 0x10 },
	{ 0x301A, CRL_REG_LEN_16BIT, 0x19DC, 0x10 },
};

static struct crl_register_write_rep ar0231at_1920_1088_4hdr_mode[] = {
	{ 0x301A, CRL_REG_LEN_16BIT, 0x10D8, 0x10 },
	{ 0x0000, CRL_REG_LEN_DELAY, 100, 0x10 },
	{ 0x3092, CRL_REG_LEN_16BIT, 0x0C24, 0x10 },
	{ 0x337A, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3520, CRL_REG_LEN_16BIT, 0x1288, 0x10 },
	{ 0x3522, CRL_REG_LEN_16BIT, 0x880C, 0x10 },
	{ 0x3524, CRL_REG_LEN_16BIT, 0x0C12, 0x10 },
	{ 0x352C, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x354A, CRL_REG_LEN_16BIT, 0x007F, 0x10 },
	{ 0x350C, CRL_REG_LEN_16BIT, 0x055C, 0x10 },
	{ 0x3506, CRL_REG_LEN_16BIT, 0x3333, 0x10 },
	{ 0x3508, CRL_REG_LEN_16BIT, 0x3333, 0x10 },
	{ 0x3100, CRL_REG_LEN_16BIT, 0x4000, 0x10 },
	{ 0x3280, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3282, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3284, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3286, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3288, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328A, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328C, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x328E, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3290, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3292, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3294, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3296, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x3298, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329A, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329C, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x329E, CRL_REG_LEN_16BIT, 0x0FA0, 0x10 },
	{ 0x301A, CRL_REG_LEN_16BIT, 0x10D8, 0x10 },
	{ 0x0000, CRL_REG_LEN_DELAY, 200, 0x10 },
	{ 0x2512, CRL_REG_LEN_16BIT, 0x8000, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0905, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3350, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2004, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1460, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1578, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x7B24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xEA24, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1022, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2410, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x155A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24FF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24FF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x24EA, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2324, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x647A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2404, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x052C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x400A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF0A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFF0A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1008, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3851, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0004, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0801, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0408, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1180, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2652, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1518, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0906, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1348, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1002, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1016, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1181, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1189, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1056, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0D09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1413, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2B15, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0311, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD909, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1214, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0312, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1409, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0110, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD612, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xDD11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD910, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xDB09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x9B09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0F11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1A12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1014, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x7610, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xE609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0812, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x290B, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0904, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0923, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15C8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13C8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x092C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1588, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1388, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C14, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1112, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBF11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB10, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6611, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xFB09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3511, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xBB12, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6312, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x6014, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xB812, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xA012, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2610, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0011, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x3053, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4215, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4010, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1611, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8111, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8910, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5612, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x010D, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0815, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD013, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x5009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1313, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0215, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC015, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC813, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0515, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8813, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0213, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0411, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xC909, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0814, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0109, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B11, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0xD908, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x091A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1440, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0903, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1214, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x10D6, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1212, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11DD, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11D9, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1056, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0917, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11DB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0913, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11FB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0905, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x121A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1210, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1460, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1250, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1076, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x10E6, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15A8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13A8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1240, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0925, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x13AD, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0902, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0907, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1588, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0901, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x138D, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B09, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0914, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4009, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B13, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x8809, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1C0C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0920, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1262, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BF, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1066, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x090A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11FB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x093B, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11BB, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1263, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1260, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1400, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1508, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x11B8, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x12A0, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1200, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1026, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1000, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1300, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x1100, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x437A, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0609, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0B05, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0708, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x4137, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x502C, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x2CFE, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x15FE, 0x10 },
	{ 0x2510, CRL_REG_LEN_16BIT, 0x0C2C, 0x10 },
	{ 0x32E6, CRL_REG_LEN_16BIT, 0x00E0, 0x10 },
	{ 0x1008, CRL_REG_LEN_16BIT, 0x036F, 0x10 },
	{ 0x100C, CRL_REG_LEN_16BIT, 0x058F, 0x10 },
	{ 0x100E, CRL_REG_LEN_16BIT, 0x07AF, 0x10 },
	{ 0x1010, CRL_REG_LEN_16BIT, 0x014F, 0x10 },
	{ 0x3230, CRL_REG_LEN_16BIT, 0x0312, 0x10 },
	{ 0x3232, CRL_REG_LEN_16BIT, 0x0532, 0x10 },
	{ 0x3234, CRL_REG_LEN_16BIT, 0x0752, 0x10 },
	{ 0x3236, CRL_REG_LEN_16BIT, 0x00F2, 0x10 },
	{ 0x3566, CRL_REG_LEN_16BIT, 0x3328, 0x10 },
	{ 0x32D0, CRL_REG_LEN_16BIT, 0x3A02, 0x10 },
	{ 0x32D2, CRL_REG_LEN_16BIT, 0x3508, 0x10 },
	{ 0x32D4, CRL_REG_LEN_16BIT, 0x3702, 0x10 },
	{ 0x32D6, CRL_REG_LEN_16BIT, 0x3C04, 0x10 },
	{ 0x32DC, CRL_REG_LEN_16BIT, 0x370A, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x302A, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x302C, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x302E, CRL_REG_LEN_16BIT, 0x0003, 0x10 },
	{ 0x3030, CRL_REG_LEN_16BIT, 0x004E, 0x10 },
	{ 0x3036, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x3038, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x30A2, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x30A6, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x3040, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3040, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x0008, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F2, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F2, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F2, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3044, CRL_REG_LEN_16BIT, 0x0400, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x3064, CRL_REG_LEN_16BIT, 0x1802, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3180, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x33E4, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x33E0, CRL_REG_LEN_16BIT, 0x0C80, 0x10 },
	{ 0x3004, CRL_REG_LEN_16BIT, 0x0004, 0x10 },
	{ 0x3008, CRL_REG_LEN_16BIT, 0x0783, 0x10 },
	{ 0x3002, CRL_REG_LEN_16BIT, 0x003C, 0x10 },
	{ 0x3006, CRL_REG_LEN_16BIT, 0x047B, 0x10 },
	{ 0x3032, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3400, CRL_REG_LEN_16BIT, 0x0010, 0x10 },
	{ 0x3402, CRL_REG_LEN_16BIT, 0x0788, 0x10 },
	{ 0x3402, CRL_REG_LEN_16BIT, 0x0F10, 0x10 },
	{ 0x3404, CRL_REG_LEN_16BIT, 0x04B8, 0x10 },
	{ 0x3404, CRL_REG_LEN_16BIT, 0x0970, 0x10 },
	{ 0x3082, CRL_REG_LEN_16BIT, 0x000C, 0x10 },
	{ 0x30BA, CRL_REG_LEN_16BIT, 0x11F3, 0x10 },
	{ 0x300C, CRL_REG_LEN_16BIT, 0x09B8, 0x10 },
	{ 0x300A, CRL_REG_LEN_16BIT, 0x0498, 0x10 },
	{ 0x3042, CRL_REG_LEN_16BIT, 0x0000, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3238, CRL_REG_LEN_16BIT, 0x0222, 0x10 },
	{ 0x3012, CRL_REG_LEN_16BIT, 0x0131, 0x10 },
	{ 0x3014, CRL_REG_LEN_16BIT, 0x098E, 0x10 },
	{ 0x321E, CRL_REG_LEN_16BIT, 0x098E, 0x10 },
	{ 0x3222, CRL_REG_LEN_16BIT, 0x098E, 0x10 },
	{ 0x3226, CRL_REG_LEN_16BIT, 0x098E, 0x10 },
	{ 0x30B0, CRL_REG_LEN_16BIT, 0x0800, 0x10 },
	{ 0x32EA, CRL_REG_LEN_16BIT, 0x3C0E, 0x10 },
	{ 0x32EA, CRL_REG_LEN_16BIT, 0x3C0E, 0x10 },
	{ 0x32EA, CRL_REG_LEN_16BIT, 0x3C0E, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x32EC, CRL_REG_LEN_16BIT, 0x72A1, 0x10 },
	{ 0x31D0, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x31AE, CRL_REG_LEN_16BIT, 0x0201, 0x10 },
	{ 0x31AE, CRL_REG_LEN_16BIT, 0x0001, 0x10 },
	{ 0x31AC, CRL_REG_LEN_16BIT, 0x140C, 0x10 },
	{ 0x340A, CRL_REG_LEN_16BIT, 0x0077, 0x10 },
	{ 0x340C, CRL_REG_LEN_16BIT, 0x0080, 0x10 },
	{ 0x30CE, CRL_REG_LEN_16BIT, 0x0120, 0x10 },
	{ 0x301A, CRL_REG_LEN_16BIT, 0x19DC, 0x10 },
};

struct crl_mode_rep ar0231at_modes[] = {
	{
		.sd_rects_items = ARRAY_SIZE(ar0231at_1920_1088_rects),
		.sd_rects = ar0231at_1920_1088_rects,
		.binn_hor = 1,
		.binn_vert = 1,
		.scale_m = 1,
		.width = 1920,
		.height = 1088,
		.min_llp = 2162,
		.min_fll = 1354,
		.comp_items = 1,
		.ctrl_data = &ar0231at_ctrl_data_modes[0],
		.mode_regs_items = ARRAY_SIZE(ar0231at_1920_1088_linear_mode),
		.mode_regs = ar0231at_1920_1088_linear_mode,
	},
	{
		.sd_rects_items = ARRAY_SIZE(ar0231at_1920_1088_rects),
		.sd_rects = ar0231at_1920_1088_rects,
		.binn_hor = 1,
		.binn_vert = 1,
		.scale_m = 1,
		.width = 1920,
		.height = 1088,
		.min_llp = 1978,
		.min_fll = 1480,
		.comp_items = 1,
		.ctrl_data = &ar0231at_ctrl_data_modes[1],
		.mode_regs_items = ARRAY_SIZE(ar0231at_1920_1088_2hdr_mode),
		.mode_regs = ar0231at_1920_1088_2hdr_mode,
	},
	{
		.sd_rects_items = ARRAY_SIZE(ar0231at_1920_1088_rects),
		.sd_rects = ar0231at_1920_1088_rects,
		.binn_hor = 1,
		.binn_vert = 1,
		.scale_m = 1,
		.width = 1920,
		.height = 1088,
		.min_llp = 1978,
		.min_fll = 1480,
		.comp_items = 1,
		.ctrl_data = &ar0231at_ctrl_data_modes[2],
		.mode_regs_items = ARRAY_SIZE(ar0231at_1920_1088_3hdr_mode),
		.mode_regs = ar0231at_1920_1088_3hdr_mode,
	},
	{
		.sd_rects_items = ARRAY_SIZE(ar0231at_1920_1088_rects),
		.sd_rects = ar0231at_1920_1088_rects,
		.binn_hor = 1,
		.binn_vert = 1,
		.scale_m = 1,
		.width = 1920,
		.height = 1088,
		.min_llp = 2246,
		.min_fll = 1304,
		.comp_items = 1,
		.ctrl_data = &ar0231at_ctrl_data_modes[3],
		.mode_regs_items = ARRAY_SIZE(ar0231at_1920_1088_4hdr_mode),
		.mode_regs = ar0231at_1920_1088_4hdr_mode,
	},
};

struct crl_csi_data_fmt ar0231at_crl_csi_data_fmt[] = {
	{
		.code = MEDIA_BUS_FMT_SGRBG12_1X12,
		.pixel_order = CRL_PIXEL_ORDER_GRBG,
		.bits_per_pixel = 12,
		.regs_items = 0,
		.regs = 0,
	},
	{
		.code = MEDIA_BUS_FMT_SRGGB12_1X12,
		.pixel_order = CRL_PIXEL_ORDER_RGGB,
		.bits_per_pixel = 12,
		.regs_items = 0,
		.regs = 0,
	},
	{
		.code = MEDIA_BUS_FMT_SBGGR12_1X12,
		.pixel_order = CRL_PIXEL_ORDER_BGGR,
		.bits_per_pixel = 12,
		.regs_items = 0,
		.regs = 0,
	},
	{
		.code = MEDIA_BUS_FMT_SGBRG12_1X12,
		.pixel_order = CRL_PIXEL_ORDER_GBRG,
		.bits_per_pixel = 12,
		.regs_items = 0,
		.regs = 0,
	}
};

static struct crl_arithmetic_ops ar0231at_ls2_ops[] = {
	{
		.op = CRL_BITWISE_LSHIFT,
		.operand.entity_val = 2,
	}
};

/* Line length pixel */
static struct crl_dynamic_register_access ar0231at_llp_regs[] = {
	{
		.address = 0x300C,
		.len = CRL_REG_LEN_16BIT,
		.ops_items = 0,
		.ops = 0,
		.mask = 0xffff,
	},
};

/* Frame length lines */
static struct crl_dynamic_register_access ar0231at_fll_regs[] = {
	{
		.address = 0x300A,
		.len = CRL_REG_LEN_16BIT,
		.ops_items = 0,
		.ops = 0,
		.mask = 0xffff,
	},
};

/* Analog gain register, also used in linear(non-HDR) mode */
static struct crl_dynamic_register_access ar0231at_ana_gain_regs[] = {
	{
		.address = 0x3366, /* analog gain */
		.len = CRL_REG_LEN_16BIT,
		.ops_items = 0,
		.ops = 0,
		.mask = 0xffff,
	},
};

/* Digital gain register */
static struct crl_dynamic_register_access ar0231at_gl_regs[] = {
	{
		.address = 0x305E, /* global digital gain */
		.len = CRL_REG_LEN_16BIT,
		.ops_items = 0,
		.ops = 0,
		.mask = 0x07ff,
	},
};

/*
 * Exposure mode:
 * 0: Linear mode
 * 1: 2-HDR mode
 * 2: 3-HDR mode
 * 3: 4-HDR mode
 */
static struct crl_dynamic_register_access ar0231at_exposure_mode_regs[] = {
	{
		.address = 0x3082,
		.len = CRL_REG_LEN_16BIT  | CRL_REG_READ_AND_UPDATE,
		.ops_items = ARRAY_SIZE(ar0231at_ls2_ops),
		.ops = ar0231at_ls2_ops,
		.mask = 0x000C,
	},
};

/*
 * Exposure Ratio in HDR mode
 * 0x8000:
 *   Select exposure ratio mode or
 *   configure exposure time for each x-HDR individually.
 * 0x0222:
 *   Selected exposure ratio mode and each ratio is 4x.
 *   The ratio also can be 2x, 8x, 16x
 */
static struct crl_dynamic_register_access ar0231at_hdr_exposure_ratio_regs[] = {
	{
		.address = 0x3238,
		.len = CRL_REG_LEN_16BIT  | CRL_REG_READ_AND_UPDATE,
		.ops_items = 0,
		.ops = 0,
		.mask = 0x8777,
	},
};

/* t1 exposure register, also used in linear(non-HDR) mode */
static struct crl_dynamic_register_access ar0231at_t1expotime_regs[] = {
	{
		.address = 0x3012, /* coarse integration time T1 */
		.len = CRL_REG_LEN_16BIT,
		.ops_items = 0,
		.ops = 0,
		.mask = 0xffff,
	},
};

/* t2 exposure register, only used in HDR mode */
static struct crl_dynamic_register_access ar0231at_t2expotime_regs[] = {
	{
		.address = 0x3212, /* coarse integration time T2 */
		.len = CRL_REG_LEN_16BIT,
		.ops_items = 0,
		.ops = 0,
		.mask = 0xffff,
	},
};

/* t3 exposure register, only used in HDR mode */
static struct crl_dynamic_register_access ar0231at_t3expotime_regs[] = {
	{
		.address = 0x3216, /* coarse integration time T3 */
		.len = CRL_REG_LEN_16BIT,
		.ops_items = 0,
		.ops = 0,
		.mask = 0xffff,
	},
};

/* t4 exposure register, only used in HDR mode */
static struct crl_dynamic_register_access ar0231at_t4expotime_regs[] = {
	{
		.address = 0x321A, /* coarse integration time T4 */
		.len = CRL_REG_LEN_16BIT,
		.ops_items = 0,
		.ops = 0,
		.mask = 0xffff,
	},
};

struct crl_v4l2_ctrl ar0231at_v4l2_ctrls[] = {
	{
		.sd_type = CRL_SUBDEV_TYPE_BINNER,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_IDLE,
		.ctrl_id = V4L2_CID_LINK_FREQ,
		.name = "V4L2_CID_LINK_FREQ",
		.type = CRL_V4L2_CTRL_TYPE_MENU_INT,
		.data.v4l2_int_menu.def = 0,
		.data.v4l2_int_menu.max = 0,
		.data.v4l2_int_menu.menu = 0,
		.flags = 0,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.regs_items = 0,
		.regs = 0,
		.dep_items = 0,
		.dep_ctrls = 0,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_GET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = V4L2_CID_PIXEL_RATE,
		.name = "V4L2_CID_PIXEL_RATE_PA",
		.type = CRL_V4L2_CTRL_TYPE_INTEGER,
		.data.std_data.min = 0,
		.data.std_data.max = INT_MAX,
		.data.std_data.step = 1,
		.data.std_data.def = 0,
		.flags = 0,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.regs_items = 0,
		.regs = 0,
		.dep_items = 0,
		.dep_ctrls = 0,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_BINNER,
		.op_type = CRL_V4L2_CTRL_GET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = V4L2_CID_PIXEL_RATE,
		.name = "V4L2_CID_PIXEL_RATE_CSI",
		.type = CRL_V4L2_CTRL_TYPE_INTEGER,
		.data.std_data.min = 0,
		.data.std_data.max = INT_MAX,
		.data.std_data.step = 1,
		.data.std_data.def = 0,
		.flags = 0,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.regs_items = 0,
		.regs = 0,
		.dep_items = 0,
		.dep_ctrls = 0,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = V4L2_CID_LINE_LENGTH_PIXELS,
		.name = "Line Length Pixels",
		.type = CRL_V4L2_CTRL_TYPE_CUSTOM,
		.data.std_data.min = 1920,
		.data.std_data.max = 65535,
		.data.std_data.step = 1,
		.data.std_data.def = 1978,
		.flags = V4L2_CTRL_FLAG_UPDATE,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.ctrl = 0,
		.regs_items = ARRAY_SIZE(ar0231at_llp_regs),
		.regs = ar0231at_llp_regs,
		.dep_items = 0,
		.dep_ctrls = 0,
		.v4l2_type = V4L2_CTRL_TYPE_INTEGER,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = V4L2_CID_FRAME_LENGTH_LINES,
		.name = "Frame Length Lines",
		.type = CRL_V4L2_CTRL_TYPE_CUSTOM,
		.data.std_data.min = 1088,
		.data.std_data.max = 65535,
		.data.std_data.step = 1,
		.data.std_data.def = 1480,
		.flags = V4L2_CTRL_FLAG_UPDATE,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.ctrl = 0,
		.regs_items = ARRAY_SIZE(ar0231at_fll_regs),
		.regs = ar0231at_fll_regs,
		.dep_items = 0,
		.dep_ctrls = 0,
		.v4l2_type = V4L2_CTRL_TYPE_INTEGER,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = V4L2_CID_ANALOGUE_GAIN,
		.name = "V4L2_CID_ANALOGUE_GAIN",
		.type = CRL_V4L2_CTRL_TYPE_INTEGER,
		.data.std_data.min = 0x0000,
		.data.std_data.max = 0xFFFF,
		.data.std_data.step = 1,
		.data.std_data.def = 0xAAAA,
		.flags = 0,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.ctrl = 0,
		.regs_items = ARRAY_SIZE(ar0231at_ana_gain_regs),
		.regs = ar0231at_ana_gain_regs,
		.dep_items = 0,
		.dep_ctrls = 0,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = V4L2_CID_GAIN,
		.name = "Digital Gain",
		.type = CRL_V4L2_CTRL_TYPE_INTEGER,
		.data.std_data.min = 0x0080,
		.data.std_data.max = 0x07FF,
		.data.std_data.step = 1,
		.data.std_data.def = 0x0080,
		.flags = 0,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.ctrl = 0,
		.regs_items = ARRAY_SIZE(ar0231at_gl_regs),
		.regs = ar0231at_gl_regs,
		.dep_items = 0,
		.dep_ctrls = 0,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = CRL_CID_EXPOSURE_MODE,
		.name = "CRL_CID_EXPOSURE_MODE",
		.type = CRL_V4L2_CTRL_TYPE_CUSTOM,
		.data.std_data.min = 0,
		.data.std_data.max = 3,
		.data.std_data.step = 1,
		.data.std_data.def = 0x0,
		.flags = V4L2_CTRL_FLAG_UPDATE,
		.impact = CRL_IMPACTS_MODE_SELECTION,
		.ctrl = 0,
		.regs_items = ARRAY_SIZE(ar0231at_exposure_mode_regs),
		.regs = ar0231at_exposure_mode_regs,
		.dep_items = 0,
		.dep_ctrls = 0,
		.v4l2_type = V4L2_CTRL_TYPE_INTEGER,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = CRL_CID_EXPOSURE_HDR_RATIO,
		.name = "CRL_CID_EXPOSURE_HDR_RATIO",
		.type = CRL_V4L2_CTRL_TYPE_CUSTOM,
		.data.std_data.min = 0,
		.data.std_data.max = 65535,
		.data.std_data.step = 1,
		.data.std_data.def = 0x0222,
		.flags = V4L2_CTRL_FLAG_UPDATE,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.ctrl = 0,
		.regs_items = ARRAY_SIZE(ar0231at_hdr_exposure_ratio_regs),
		.regs = ar0231at_hdr_exposure_ratio_regs,
		.dep_items = 0,
		.dep_ctrls = 0,
		.v4l2_type = V4L2_CTRL_TYPE_INTEGER,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = V4L2_CID_EXPOSURE,
		.name = "T1_COARSE_EXPOSURE_TIME",
		.type = CRL_V4L2_CTRL_TYPE_INTEGER,
		.data.std_data.min = 0x0,
		.data.std_data.max = 0xFFFF,
		.data.std_data.step = 1,
		.data.std_data.def = 0x0163,
		.flags = 0,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.ctrl = 0,
		.regs_items = ARRAY_SIZE(ar0231at_t1expotime_regs),
		.regs = ar0231at_t1expotime_regs,
		.dep_items = 0,
		.dep_ctrls = 0,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = CRL_CID_EXPOSURE_SHS1,
		.name = "T2_COARSE_EXPOSURE_TIME",
		.type = CRL_V4L2_CTRL_TYPE_CUSTOM,
		.data.std_data.min = 0x0,
		.data.std_data.max = 0xFFFF,
		.data.std_data.step = 1,
		.data.std_data.def = 0x0002,
		.flags = V4L2_CTRL_FLAG_UPDATE,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.ctrl = 0,
		.regs_items = ARRAY_SIZE(ar0231at_t2expotime_regs),
		.regs = ar0231at_t2expotime_regs,
		.dep_items = 0,
		.dep_ctrls = 0,
		.v4l2_type = V4L2_CTRL_TYPE_INTEGER,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = CRL_CID_EXPOSURE_SHS2,
		.name = "T3_COARSE_EXPOSURE_TIME",
		.type = CRL_V4L2_CTRL_TYPE_CUSTOM,
		.data.std_data.min = 0x0,
		.data.std_data.max = 0xFFFF,
		.data.std_data.step = 1,
		.data.std_data.def = 0x0001,
		.flags = V4L2_CTRL_FLAG_UPDATE,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.ctrl = 0,
		.regs_items = ARRAY_SIZE(ar0231at_t3expotime_regs),
		.regs = ar0231at_t3expotime_regs,
		.dep_items = 0,
		.dep_ctrls = 0,
		.v4l2_type = V4L2_CTRL_TYPE_INTEGER,
	},
	{
		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
		.op_type = CRL_V4L2_CTRL_SET_OP,
		.context = SENSOR_POWERED_ON,
		.ctrl_id = CRL_CID_EXPOSURE_SHS3,
		.name = "T4_COARSE_EXPOSURE_TIME",
		.type = CRL_V4L2_CTRL_TYPE_CUSTOM,
		.data.std_data.min = 0x0,
		.data.std_data.max = 0xFFFF,
		.data.std_data.step = 1,
		.data.std_data.def = 0x0,
		.flags = V4L2_CTRL_FLAG_UPDATE,
		.impact = CRL_IMPACTS_NO_IMPACT,
		.ctrl = 0,
		.regs_items = ARRAY_SIZE(ar0231at_t4expotime_regs),
		.regs = ar0231at_t4expotime_regs,
		.dep_items = 0,
		.dep_ctrls = 0,
		.v4l2_type = V4L2_CTRL_TYPE_INTEGER,
	},
};

struct crl_sensor_detect_config ar0231at_sensor_detect_regset[] = {
	{
		.reg = { 0x3000, CRL_REG_LEN_16BIT, 0xFFFF },
		.width = 15,
	},
};

static struct crl_sensor_limits ar0231at_maxim_sensor_limits = {
	.x_addr_min = 0,
	.y_addr_min = 0,
	.x_addr_max = 1920,
	.y_addr_max = 1088,
	.min_frame_length_lines = 240,
	.max_frame_length_lines = 65535,
	.min_line_length_pixels = 320,
	.max_line_length_pixels = 32752,
};

struct crl_sensor_configuration ar0231at_crl_configuration = {
	.powerup_regs_items = 0,
	.powerup_regs = 0,

	.poweroff_regs_items = 0,
	.poweroff_regs = 0,

	.power_items = 0,
	.power_entities = 0,

	.pll_config_items = ARRAY_SIZE(ar0231at_pll_configurations),
	.pll_configs = ar0231at_pll_configurations,

	.id_reg_items = ARRAY_SIZE(ar0231at_sensor_detect_regset),
	.id_regs = ar0231at_sensor_detect_regset,

	.subdev_items = ARRAY_SIZE(ar0231at_sensor_subdevs),
	.subdevs = ar0231at_sensor_subdevs,

	.modes_items = ARRAY_SIZE(ar0231at_modes),
	.modes = ar0231at_modes,

	.csi_fmts_items = ARRAY_SIZE(ar0231at_crl_csi_data_fmt),
	.csi_fmts = ar0231at_crl_csi_data_fmt,

	.v4l2_ctrls_items = ARRAY_SIZE(ar0231at_v4l2_ctrls),
	.v4l2_ctrl_bank = ar0231at_v4l2_ctrls,

	.streamon_regs_items = 0,
	.streamon_regs = 0,
	.streamoff_regs_items = 0,
	.streamoff_regs = 0,

	.sensor_limits = &ar0231at_maxim_sensor_limits,

};

#endif /* __CRLMODULE_AR0231AT_CONFIGURATION_H_ */
